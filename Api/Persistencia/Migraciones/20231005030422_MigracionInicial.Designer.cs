// <auto-generated />
using System;
using Api.Persistencia;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Api.Persistencia.Migraciones
{
    [DbContext(typeof(AplicacionDbContext))]
    [Migration("20231005030422_MigracionInicial")]
    partial class MigracionInicial
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.11")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("Aplicacion.Dominio.Rol", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime>("FechaModificacion")
                        .HasColumnType("datetime(6)");

                    b.Property<bool>("Habilitado")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("UsuarioCreacion")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("UsuarioModificacion")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("Rol");
                });

            modelBuilder.Entity("Aplicacion.Dominio.Usuario", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<string>("Contraseña")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime>("FechaModificacion")
                        .HasColumnType("datetime(6)");

                    b.Property<bool>("Habilitado")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("UsuarioCreacion")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("UsuarioModificacion")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("Usuario");

                    b.UseTptMappingStrategy();
                });

            modelBuilder.Entity("RolUsuario", b =>
                {
                    b.Property<Guid>("AdministradorUsuario")
                        .HasColumnType("char(36)");

                    b.Property<Guid>("UsuarioAsignado")
                        .HasColumnType("char(36)");

                    b.HasKey("AdministradorUsuario", "UsuarioAsignado");

                    b.HasIndex("UsuarioAsignado");

                    b.ToTable("RolUsuario");
                });

            modelBuilder.Entity("Aplicacion.Dominio.Administrador", b =>
                {
                    b.HasBaseType("Aplicacion.Dominio.Usuario");

                    b.ToTable("Administrador");
                });

            modelBuilder.Entity("RolUsuario", b =>
                {
                    b.HasOne("Aplicacion.Dominio.Rol", null)
                        .WithMany()
                        .HasForeignKey("AdministradorUsuario")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Aplicacion.Dominio.Usuario", null)
                        .WithMany()
                        .HasForeignKey("UsuarioAsignado")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Aplicacion.Dominio.Administrador", b =>
                {
                    b.HasOne("Aplicacion.Dominio.Usuario", null)
                        .WithOne()
                        .HasForeignKey("Aplicacion.Dominio.Administrador", "Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
